{
  "permissions": {
    "allow": [
      "Bash(grep:*)",
      "Bash(npx supabase:*)",
      "Bash(SUPABASE_ACCESS_TOKEN=\"sbp_72e308dcfc7de7eb83f03ab8fbea9366e3ffe6d6\" npx supabase functions deploy analyze-stock-coordinator --project-ref lnvjsqyvhczgxvygbqer)",
      "Bash(SUPABASE_ACCESS_TOKEN=\"sbp_72e308dcfc7de7eb83f03ab8fbea9366e3ffe6d6\" npx supabase db push --project-ref lnvjsqyvhczgxvygbqer)",
      "Bash(SUPABASE_ACCESS_TOKEN=\"sbp_72e308dcfc7de7eb83f03ab8fbea9366e3ffe6d6\" npx supabase functions logs analyze-stock-coordinator --project-ref lnvjsqyvhczgxvygbqer)",
      "Bash(sed:*)",
      "Bash(SUPABASE_ACCESS_TOKEN=\"sbp_72e308dcfc7de7eb83f03ab8fbea9366e3ffe6d6\" npx supabase functions deploy agent-portfolio-manager --project-ref lnvjsqyvhczgxvygbqer)",
      "Bash(rm:*)",
      "Bash(SUPABASE_ACCESS_TOKEN=\"sbp_72e308dcfc7de7eb83f03ab8fbea9366e3ffe6d6\" npx supabase functions deploy send-invitation --project-ref lnvjsqyvhczgxvygbqer)",
      "Bash(SUPABASE_ACCESS_TOKEN=\"sbp_72e308dcfc7de7eb83f03ab8fbea9366e3ffe6d6\" npx supabase functions logs send-invitation --project-ref lnvjsqyvhczgxvygbqer --tail 20)",
      "Bash(SUPABASE_ACCESS_TOKEN=\"sbp_72e308dcfc7de7eb83f03ab8fbea9366e3ffe6d6\" npx supabase --project-ref lnvjsqyvhczgxvygbqer functions list)",
      "Bash(SUPABASE_ACCESS_TOKEN=\"sbp_72e308dcfc7de7eb83f03ab8fbea9366e3ffe6d6\" npx supabase db run --project-ref lnvjsqyvhczgxvygbqer --sql \"\n-- Fix the admin_delete_user function with proper parameter references\nCREATE OR REPLACE FUNCTION public.admin_delete_user(p_target_user_id UUID)\nRETURNS JSONB\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path = public\nAS $$\nDECLARE\n    v_current_user_id UUID;\n    v_is_admin BOOLEAN := false;\n    v_target_email TEXT;\nBEGIN\n    -- Get current user\n    v_current_user_id := auth.uid();\n    \n    IF v_current_user_id IS NULL THEN\n        RETURN jsonb_build_object(\n            ''success'', false,\n            ''error'', ''Not authenticated''\n        );\n    END IF;\n    \n    -- Check if current user has admin role\n    SELECT EXISTS(\n        SELECT 1 \n        FROM public.user_roles ur\n        JOIN public.roles r ON ur.role_id = r.id\n        WHERE ur.user_id = v_current_user_id\n        AND ur.is_active = true\n        AND r.name = ''admin''\n    ) INTO v_is_admin;\n    \n    -- If not admin by role, check if first user (fallback admin)\n    IF NOT v_is_admin THEN\n        SELECT v_current_user_id = (\n            SELECT id FROM auth.users \n            ORDER BY created_at ASC \n            LIMIT 1\n        ) INTO v_is_admin;\n    END IF;\n    \n    IF NOT v_is_admin THEN\n        RETURN jsonb_build_object(\n            ''success'', false,\n            ''error'', ''Unauthorized: Only admins can delete users''\n        );\n    END IF;\n    \n    -- Prevent self-deletion\n    IF p_target_user_id = v_current_user_id THEN\n        RETURN jsonb_build_object(\n            ''success'', false,\n            ''error'', ''Cannot delete your own account''\n        );\n    END IF;\n    \n    -- Check if target user exists\n    SELECT email INTO v_target_email \n    FROM auth.users \n    WHERE id = p_target_user_id;\n    \n    IF v_target_email IS NULL THEN\n        RETURN jsonb_build_object(\n            ''success'', false,\n            ''error'', ''User not found''\n        );\n    END IF;\n    \n    -- Perform the deletion\n    BEGIN\n        -- Delete from role_audit_log\n        DELETE FROM public.role_audit_log ral\n        WHERE ral.user_id = p_target_user_id \n           OR ral.target_user_id = p_target_user_id;\n        \n        -- Delete from user_roles\n        DELETE FROM public.user_roles ur\n        WHERE ur.user_id = p_target_user_id \n           OR ur.granted_by = p_target_user_id;\n        \n        -- Delete from other tables that might not have CASCADE set\n        DELETE FROM public.user_usage WHERE user_id = p_target_user_id;\n        DELETE FROM public.invitations WHERE invited_by = p_target_user_id OR confirmed_user_id = p_target_user_id;\n        \n        -- Now delete from auth.users (this will cascade to all other tables)\n        DELETE FROM auth.users WHERE id = p_target_user_id;\n        \n        RETURN jsonb_build_object(\n            ''success'', true,\n            ''message'', ''User deleted successfully''\n        );\n        \n    EXCEPTION\n        WHEN OTHERS THEN\n            -- Return the actual error for debugging\n            RETURN jsonb_build_object(\n                ''success'', false,\n                ''error'', ''Failed to delete user: '' || SQLERRM\n            );\n    END;\nEND;\n$$;\n\n-- Grant execute permission to authenticated users\nGRANT EXECUTE ON FUNCTION public.admin_delete_user(UUID) TO authenticated;\n\")",
      "Bash(cat:*)",
      "WebFetch(domain:supabase.com)",
      "Bash(SUPABASE_ACCESS_TOKEN=\"sbp_72e308dcfc7de7eb83f03ab8fbea9366e3ffe6d6\" npx supabase functions logs send-invitation --project-ref lnvjsqyvhczgxvygbqer --tail 10)",
      "Bash(SUPABASE_ACCESS_TOKEN=\"sbp_72e308dcfc7de7eb83f03ab8fbea9366e3ffe6d6\" npx supabase db push --linked)",
      "Bash(find:*)",
      "WebSearch",
      "Bash(SUPABASE_ACCESS_TOKEN=\"sbp_72e308dcfc7de7eb83f03ab8fbea9366e3ffe6d6\" npx supabase functions logs send-invitation --project-ref lnvjsqyvhczgxvygbqer --tail 5)",
      "Bash(SUPABASE_ACCESS_TOKEN=\"sbp_72e308dcfc7de7eb83f03ab8fbea9366e3ffe6d6\" npx supabase functions deploy opportunity-agent --project-ref lnvjsqyvhczgxvygbqer)",
      "Bash(SUPABASE_ACCESS_TOKEN=\"sbp_72e308dcfc7de7eb83f03ab8fbea9366e3ffe6d6\" npx supabase functions deploy agent-market-analyst --project-ref lnvjsqyvhczgxvygbqer)",
      "Bash(SUPABASE_ACCESS_TOKEN=\"sbp_72e308dcfc7de7eb83f03ab8fbea9366e3ffe6d6\" npx supabase functions list)",
      "Bash(SUPABASE_ACCESS_TOKEN=\"sbp_72e308dcfc7de7eb83f03ab8fbea9366e3ffe6d6\" npx supabase functions deploy alpaca-proxy --project-ref lnvjsqyvhczgxvygbqer)",
      "Bash(SUPABASE_ACCESS_TOKEN=\"sbp_72e308dcfc7de7eb83f03ab8fbea9366e3ffe6d6\" npx supabase functions logs alpaca-proxy --project-ref lnvjsqyvhczgxvygbqer --tail 5)",
      "Bash(SUPABASE_ACCESS_TOKEN=\"sbp_72e308dcfc7de7eb83f03ab8fbea9366e3ffe6d6\" npx supabase functions logs opportunity-agent --project-ref lnvjsqyvhczgxvygbqer --tail 20)",
      "Bash(SUPABASE_ACCESS_TOKEN=\"sbp_72e308dcfc7de7eb83f03ab8fbea9366e3ffe6d6\" npx supabase logs opportunity-agent --project-ref lnvjsqyvhczgxvygbqer --tail 20)",
      "WebFetch(domain:docs.alpaca.markets)",
      "Bash(for:*)",
      "Bash(done)"
    ],
    "deny": [],
    "additionalDirectories": [
      "/home/TradingAgent/TradingAgents/tradingagents/agents"
    ]
  }
}