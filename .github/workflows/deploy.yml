name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build with Vite
        env:
          # Public environment variables (safe to expose)
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
          # Disable public registration for production
          VITE_ENABLE_PUBLIC_REGISTRATION: 'false'
          # Set base path for GitHub Pages (root for TradingGoose.github.io)
          PUBLIC_URL: /
          # Set to production to enable console stripping
          NODE_ENV: production
        run: npm run build
        
      - name: Copy index.html to 404.html for SPA routing
        run: cp ./dist/index.html ./dist/404.html
        
      - name: Add .nojekyll file
        run: touch ./dist/.nojekyll
        
      - name: Create web.config for proper MIME types (if needed)
        run: |
          # GitHub Pages uses Jekyll by default, but .nojekyll disables it
          # Ensure all JS files have proper content-type headers by checking index.html
          echo "Checking for module script references in index.html..."
          if grep -q 'type="module"' ./dist/index.html; then
            echo "Module scripts found - GitHub Pages should handle these correctly"
          fi
        
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'
          
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4